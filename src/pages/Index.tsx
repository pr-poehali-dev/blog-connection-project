import { useState } from 'react'
import { Card, CardContent, CardHeader } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
import { Textarea } from '@/components/ui/textarea'
import { Badge } from '@/components/ui/badge'
import Icon from '@/components/ui/icon'

interface Post {
  id: number
  author: {
    name: string
    username: string
    avatar: string
  }
  content: string
  image?: string
  likes: number
  comments: number
  shares: number
  timestamp: string
  liked: boolean
}

const mockPosts: Post[] = [
  {
    id: 1,
    author: {
      name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      username: '@anna_dev',
      avatar: '–ê–ü'
    },
    content: '–°–µ–≥–æ–¥–Ω—è –∑–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–æ–≤—É—é —Ñ–∏—á—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏! –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥—Ä—É–ø–ø—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. –û—á–µ–Ω—å —Ä–∞–¥–∞ –≤–∏–¥–µ—Ç—å, –∫–∞–∫ –∏–¥–µ—è –≤–æ–ø–ª–æ—â–∞–µ—Ç—Å—è –≤ –∂–∏–∑–Ω—å üöÄ',
    likes: 24,
    comments: 8,
    shares: 3,
    timestamp: '2—á',
    liked: false
  },
  {
    id: 2,
    author: {
      name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
      username: '@dimkoz',
      avatar: '–î–ö'
    },
    content: '–î–µ–ª—é—Å—å –ø–æ–¥–±–æ—Ä–∫–æ–π –ª—É—á—à–∏—Ö –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º 2024 –≥–æ–¥–∞. –û—Å–æ–±–µ–Ω–Ω–æ –≤–ø–µ—á–∞—Ç–ª–∏–ª–∞ —Ä–∞–±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥—ã Airbnb - –æ–Ω–∏ —Å–æ–∑–¥–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ.',
    image: 'https://v3.fal.media/files/rabbit/ZXgn7pUEK__juISIaVIJT_output.png',
    likes: 156,
    comments: 23,
    shares: 45,
    timestamp: '4—á',
    liked: true
  },
  {
    id: 3,
    author: {
      name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
      username: '@maria_ux',
      avatar: '–ú–°'
    },
    content: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç—å—è –æ —Ç–æ–º, –∫–∞–∫ UX –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏—é –≤ e-commerce. –ö–ª—é—á–µ–≤–æ–π –≤—ã–≤–æ–¥: –ø—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 35%',
    likes: 89,
    comments: 12,
    shares: 18,
    timestamp: '6—á',
    liked: false
  }
]

function Index() {
  const [posts, setPosts] = useState<Post[]>(mockPosts)
  const [newPost, setNewPost] = useState('')
  const [activeTab, setActiveTab] = useState('home')

  const handleLike = (postId: number) => {
    setPosts(posts.map(post => 
      post.id === postId 
        ? { ...post, liked: !post.liked, likes: post.liked ? post.likes - 1 : post.likes + 1 }
        : post
    ))
  }

  const handleNewPost = () => {
    if (newPost.trim()) {
      const post: Post = {
        id: Date.now(),
        author: {
          name: '–í—ã',
          username: '@you',
          avatar: '–í'
        },
        content: newPost,
        likes: 0,
        comments: 0,
        shares: 0,
        timestamp: '—Å–µ–π—á–∞—Å',
        liked: false
      }
      setPosts([post, ...posts])
      setNewPost('')
    }
  }

  const sidebarItems = [
    { id: 'home', label: '–õ–µ–Ω—Ç–∞', icon: 'Home' },
    { id: 'explore', label: '–ü–æ–∏—Å–∫', icon: 'Search' },
    { id: 'messages', label: '–°–æ–æ–±—â–µ–Ω–∏—è', icon: 'MessageCircle' },
    { id: 'notifications', label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', icon: 'Bell' },
    { id: 'profile', label: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'User' },
    { id: 'settings', label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: 'Settings' }
  ]

  return (
    <div className="min-h-screen bg-background">
      <div className="flex max-w-7xl mx-auto">
        
        {/* Sidebar */}
        <div className="fixed left-0 top-0 h-full w-64 bg-card border-r border-border p-6 hidden lg:block">
          <div className="mb-8">
            <h1 className="text-2xl font-bold text-foreground">SocialHub</h1>
          </div>
          
          <nav className="space-y-2">
            {sidebarItems.map(item => (
              <button
                key={item.id}
                onClick={() => setActiveTab(item.id)}
                className={`w-full flex items-center gap-4 px-4 py-3 rounded-xl text-left transition-all duration-200 hover:bg-accent ${
                  activeTab === item.id ? 'bg-primary text-primary-foreground' : 'text-foreground'
                }`}
              >
                <Icon name={item.icon as any} size={24} />
                <span className="font-medium">{item.label}</span>
              </button>
            ))}
          </nav>
        </div>

        {/* Main Content */}
        <div className="flex-1 lg:ml-64">
          <div className="max-w-2xl mx-auto p-6">
            
            {/* Header */}
            <div className="mb-8">
              <h2 className="text-3xl font-bold text-foreground mb-2">–õ–µ–Ω—Ç–∞</h2>
              <p className="text-muted-foreground">–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π</p>
            </div>

            {/* Create Post */}
            <Card className="mb-8 shadow-sm border-border">
              <CardContent className="p-6">
                <div className="flex gap-4">
                  <Avatar>
                    <AvatarFallback className="bg-primary text-primary-foreground">–í</AvatarFallback>
                  </Avatar>
                  <div className="flex-1">
                    <Textarea
                      placeholder="–û —á—ë–º –¥—É–º–∞–µ—Ç–µ?"
                      value={newPost}
                      onChange={(e) => setNewPost(e.target.value)}
                      className="border-0 shadow-none resize-none p-0 text-lg placeholder:text-muted-foreground focus-visible:ring-0"
                      rows={3}
                    />
                    <div className="flex justify-between items-center mt-4 pt-4 border-t border-border">
                      <div className="flex gap-2">
                        <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-primary">
                          <Icon name="Image" size={20} />
                        </Button>
                        <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-primary">
                          <Icon name="Video" size={20} />
                        </Button>
                        <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-primary">
                          <Icon name="MapPin" size={20} />
                        </Button>
                      </div>
                      <Button 
                        onClick={handleNewPost}
                        disabled={!newPost.trim()}
                        className="bg-primary hover:bg-primary/90 text-primary-foreground font-medium px-6"
                      >
                        –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
                      </Button>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Posts Feed */}
            <div className="space-y-6">
              {posts.map(post => (
                <Card key={post.id} className="shadow-sm border-border hover:shadow-md transition-shadow duration-200">
                  <CardHeader className="pb-4">
                    <div className="flex items-start gap-3">
                      <Avatar>
                        <AvatarImage src={post.author.avatar} />
                        <AvatarFallback className="bg-primary text-primary-foreground font-medium">
                          {post.author.avatar}
                        </AvatarFallback>
                      </Avatar>
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-1">
                          <h3 className="font-semibold text-foreground">{post.author.name}</h3>
                          <span className="text-muted-foreground text-sm">{post.author.username}</span>
                          <span className="text-muted-foreground text-sm">¬∑</span>
                          <span className="text-muted-foreground text-sm">{post.timestamp}</span>
                        </div>
                      </div>
                      <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-foreground">
                        <Icon name="MoreHorizontal" size={20} />
                      </Button>
                    </div>
                  </CardHeader>
                  
                  <CardContent className="pt-0">
                    <p className="text-foreground leading-relaxed mb-4">{post.content}</p>
                    
                    {post.image && (
                      <div className="mb-4 rounded-xl overflow-hidden border border-border">
                        <img 
                          src={post.image} 
                          alt="Post content" 
                          className="w-full h-auto object-cover"
                        />
                      </div>
                    )}
                    
                    <div className="flex items-center justify-between pt-4 border-t border-border">
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => handleLike(post.id)}
                        className={`gap-2 hover:bg-red-50 hover:text-red-600 transition-colors ${
                          post.liked ? 'text-red-600' : 'text-muted-foreground'
                        }`}
                      >
                        <Icon name={post.liked ? "Heart" : "Heart"} size={20} className={post.liked ? "fill-current" : ""} />
                        <span className="font-medium">{post.likes}</span>
                      </Button>
                      
                      <Button variant="ghost" size="sm" className="gap-2 text-muted-foreground hover:text-primary hover:bg-blue-50">
                        <Icon name="MessageCircle" size={20} />
                        <span className="font-medium">{post.comments}</span>
                      </Button>
                      
                      <Button variant="ghost" size="sm" className="gap-2 text-muted-foreground hover:text-green-600 hover:bg-green-50">
                        <Icon name="Share" size={20} />
                        <span className="font-medium">{post.shares}</span>
                      </Button>
                      
                      <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-foreground">
                        <Icon name="Bookmark" size={20} />
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>

        {/* Right Sidebar - Trending */}
        <div className="hidden xl:block w-80 p-6">
          <Card className="mb-6 shadow-sm border-border">
            <CardHeader className="pb-4">
              <h3 className="font-semibold text-foreground">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
            </CardHeader>
            <CardContent className="space-y-4">
              {[
                { name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤', username: '@ivan_dev', followers: '1.2K' },
                { name: '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', username: '@elena_design', followers: '856' },
                { name: 'Tech Community', username: '@tech_ru', followers: '5.7K' }
              ].map((user, i) => (
                <div key={i} className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <Avatar className="w-10 h-10">
                      <AvatarFallback className="bg-muted text-muted-foreground text-sm">
                        {user.name.split(' ').map(n => n[0]).join('')}
                      </AvatarFallback>
                    </Avatar>
                    <div>
                      <p className="font-medium text-foreground text-sm">{user.name}</p>
                      <p className="text-muted-foreground text-xs">{user.followers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</p>
                    </div>
                  </div>
                  <Button size="sm" variant="outline" className="text-xs">
                    –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                  </Button>
                </div>
              ))}
            </CardContent>
          </Card>

          <Card className="shadow-sm border-border">
            <CardHeader className="pb-4">
              <h3 className="font-semibold text-foreground">–¢—Ä–µ–Ω–¥—ã</h3>
            </CardHeader>
            <CardContent className="space-y-3">
              {[
                { tag: '#ReactJS', posts: '12.5K' },
                { tag: '#–î–∏–∑–∞–π–Ω', posts: '8.9K' },
                { tag: '#–°—Ç–∞—Ä—Ç–∞–ø', posts: '5.2K' },
                { tag: '#Frontend', posts: '15.7K' }
              ].map((trend, i) => (
                <div key={i} className="hover:bg-accent p-2 rounded-lg cursor-pointer transition-colors">
                  <p className="font-medium text-foreground text-sm">{trend.tag}</p>
                  <p className="text-muted-foreground text-xs">{trend.posts} –ø–æ—Å—Ç–æ–≤</p>
                </div>
              ))}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

export default Index